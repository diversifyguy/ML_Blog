{
  
    
        "post0": {
            "title": "Woj Twitter Analysis",
            "content": "Woj Bombs - Twitter Analysis using NLP . Anyone who seriously follows the NBA knows where to go for breaking news: the Twitter accounts of ESPN&#39;s Adrian Wojnarowski. . Like any Twitter account, it&#39;s easy to forget that Woj&#39;s account grew from humble beginnings. . Here&#39;s Woj&#39;s first ever tweet from @wojespn (note: Woj&#39;s Twitter handle changed when he joined ESPN in 2009), dated 24-June-2009: This is your new spot for Adrian Wojnarowski and Johnny Ludden&#39;s breaking NBA news on Yahoo! Sports. . &mdash; Adrian Wojnarowski (@wojespn) June 24, 2009 Since then, Woj&#39;s follower count has grown to 4.7 million as of 6-July-2021. . What might we learn by analyzing 12 years of Woj tweets? The purpose of this exercise is to find out. . Visualizing the Tweets . After using twint to extract all the tweets from Woj&#39;s account, I went about cleaning the data and organizing it into a pandas dataframe: . df = pd.read_csv(&#39;/Users/jhoffstein/twint/woj.csv&#39;, sep=&#39; t&#39;, lineterminator=&#39; r&#39;, low_memory=False) . display(df.info()) . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; RangeIndex: 16539 entries, 0 to 16538 Data columns (total 36 columns): # Column Non-Null Count Dtype -- -- 0 id 16539 non-null object 1 conversation_id 16538 non-null float64 2 created_at 16538 non-null object 3 date 16538 non-null object 4 time 16538 non-null object 5 timezone 16538 non-null float64 6 user_id 16538 non-null float64 7 username 16538 non-null object 8 name 16538 non-null object 9 place 0 non-null float64 10 tweet 16538 non-null object 11 language 16538 non-null object 12 mentions 16538 non-null object 13 urls 16538 non-null object 14 photos 16538 non-null object 15 replies_count 16538 non-null float64 16 retweets_count 16538 non-null float64 17 likes_count 16538 non-null float64 18 hashtags 16538 non-null object 19 cashtags 16538 non-null object 20 link 16538 non-null object 21 retweet 16538 non-null object 22 quote_url 1408 non-null object 23 video 16538 non-null float64 24 thumbnail 353 non-null object 25 near 0 non-null float64 26 geo 0 non-null float64 27 source 0 non-null float64 28 user_rt_id 0 non-null float64 29 user_rt 0 non-null float64 30 retweet_id 0 non-null float64 31 reply_to 16538 non-null object 32 retweet_date 0 non-null float64 33 translate 0 non-null float64 34 trans_src 0 non-null float64 35 trans_dest 0 non-null float64 dtypes: float64(18), object(18) memory usage: 4.5+ MB . None . drop_list = [&#39;place&#39;,&#39;near&#39;,&#39;geo&#39;,&#39;source&#39;,&#39;user_rt_id&#39;,&#39;user_rt&#39;,&#39;retweet_id&#39;,&#39;retweet_date&#39;,&#39;translate&#39;,&#39;trans_src&#39;,&#39;trans_dest&#39;] df = df.drop(columns=drop_list) . df[&#39;tweet&#39;] = df[&#39;tweet&#39;].str.replace(&#39;http S+|www. S+&#39;, &#39;&#39;,case=False) . /var/folders/dr/jwj01j9s64s4s24j87qpmg8sq27k40/T/ipykernel_24930/411855716.py:2: FutureWarning: The default value of regex will change from True to False in a future version. . Basic Data Visualization with Texthero and Sweetviz . from texthero import preprocessing # create a custom pipeline to preprocess the raw text custom_pipeline = [preprocessing.fillna , preprocessing.lowercase , preprocessing.remove_digits , preprocessing.remove_punctuation , preprocessing.remove_diacritics , preprocessing.remove_stopwords] # call clean() method to clean the raw text in &#39;tweet&#39; col and pass the custom_pipeline to pipeline argument df[&#39;clean_tweet&#39;] = hero.clean(df[&#39;tweet&#39;], pipeline = custom_pipeline) . df[&#39;pca&#39;] = ( df[&#39;clean_tweet&#39;] .pipe(hero.clean) .pipe(hero.tfidf) .pipe(hero.pca) ) . df[&#39;tfidf&#39;] = ( hero.tfidf(df[&#39;clean_tweet&#39;], max_features=100) ) df[[&quot;tfidf&quot;]].head(2) . df[&#39;named_entities&#39;] = hero.named_entities(df[&#39;clean_tweet&#39;]) . NUM_TOP_WORDS = 10 hero.top_words(df[&#39;clean_tweet&#39;])[:NUM_TOP_WORDS] . sources 5741 league 3791 espn 3437 tell 3096 deal 2741 nba 2425 source 2107 tells 1924 yahoo 1791 sports 1667 Name: clean_tweet, dtype: int64 . hero.top_words(df[&#39;clean_tweet&#39;]).head(20).plot.bar(figsize=(15,10)) plt.show() . from texthero import stopwords default_stopwords = stopwords.DEFAULT #add a list of stopwords to the stopwords stop_w = [&quot;co&quot;,&quot;https&quot;,&quot;http&quot;, &quot;tell&quot;, &quot;tells&quot;, &quot;game&quot;, &quot;season&quot;, &quot;sports&quot;, &quot;two&quot;] custom_stopwords = default_stopwords.union(set(stop_w)) #Call remove_stopwords and pass the custom_stopwords list df[&#39;clean_tweet&#39;] = hero.remove_stopwords(df[&#39;clean_tweet&#39;], custom_stopwords) . hero.top_words(df[&#39;clean_tweet&#39;]).head(20).plot.bar(figsize=(15,10)) plt.show() . hero.visualization.wordcloud(df[&#39;clean_tweet&#39;],width = 400, height= 400,background_color=&#39;White&#39;) . df[&#39;kmeans&#39;] = ( df[&#39;clean_tweet&#39;] .pipe(hero.tfidf,max_features=300) .pipe(hero.kmeans, n_clusters=5) ) . /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:786: FutureWarning: &#39;precompute_distances&#39; was deprecated in version 0.23 and will be removed in 1.0 (renaming of 0.25). It has no effect /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/sklearn/cluster/_kmeans.py:792: FutureWarning: &#39;n_jobs&#39; was deprecated in version 0.23 and will be removed in 1.0 (renaming of 0.25). . id conversation_id created_at date time timezone user_id username name tweet language mentions urls photos replies_count retweets_count likes_count hashtags cashtags link retweet quote_url video thumbnail reply_to clean_tweet pca tfidf named_entities kmeans . 0 n1412479849080320001 | 1.412480e+18 | 2021-07-06 14:33:33 EDT | 2021-07-06 | 14:33:33 | -400.0 | 50323173.0 | wojespn | Adrian Wojnarowski | Reporting with @Malika_Andrews: Milwaukee’s Giannis Antetokounmpo has continued around-the-clock treatment on his left knee with hopes of becoming cleared to play Game 1 of the Finals vs. Phoenix tonight. There’s expected to be a game-time decision on his availability. | en | [{&#39;screen_name&#39;: &#39;malika_andrews&#39;, &#39;name&#39;: &#39;malika andrews&#39;, &#39;id&#39;: &#39;2379200053&#39;}] | [] | [] | 244.0 | 1059.0 | 7308.0 | [] | [] | https://twitter.com/wojespn/status/1412479849080320001 | False | NaN | 0.0 | NaN | [] | reporting malika andrews milwaukee&#39; giannis antetokounmpo continued around clock treatment left knee hopes becoming cleared play finals vs phoenix tonight &#39; expected time decision availability | [-0.181686791381161, 0.01917158240664424] | [0.3432569527357847, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3432569527357847, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.62827486342842, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.35486837971815144, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3418394685694084, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3561379446022077, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] | [(milwaukee, GPE, 28, 37), (phoenix, GPE, 159, 166), (tonight, TIME, 167, 174)] | 0 | . 1 n1412114670060773377 | 1.412114e+18 | 2021-07-05 14:22:27 EDT | 2021-07-05 | 14:22:27 | -400.0 | 50323173.0 | wojespn | Adrian Wojnarowski | Mosley and Unseld Jr., are also serious head coaching candidates for the Orlando Magic job, sources tell ESPN. | en | [] | [] | [] | 29.0 | 173.0 | 1340.0 | [] | [] | https://twitter.com/wojespn/status/1412114670060773377 | False | NaN | 0.0 | NaN | [] | mosley unseld jr also serious head coaching candidates orlando magic job sources espn | [0.06612464056400236, -0.2739120161846545] | [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.43770103298202834, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25478465375369536, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4664468983737951, 0.0, 0.0, 0.452008393763466, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.46026997785353085, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.20241832150279795, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.262291173144681, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... | [(mosley, ORG, 0, 6), (orlando, GPE, 60, 67)] | 4 | . 2 n1412114367852781568 | 1.412114e+18 | 2021-07-05 14:21:15 EDT | 2021-07-05 | 14:21:15 | -400.0 | 50323173.0 | wojespn | Adrian Wojnarowski | Washington’s search process for a new coach has narrowed to several assistants, including Dallas’ Jamahl Mosley, Milwaukee’s Darvin Ham and Charles Lee and Denver’s Wes Unseld, Jr., sources tell ESPN. Those are among the candidates who will talk to Wizards again this week. | en | [] | [] | [] | 164.0 | 543.0 | 4098.0 | [] | [] | https://twitter.com/wojespn/status/1412114367852781568 | False | NaN | 0.0 | NaN | [] | washington&#39; search process new coach narrowed several assistants including dallas&#39; jamahl mosley milwaukee&#39; darvin ham charles lee denver&#39; wes unseld jr sources espn among candidates talk wizards week | [0.14222517760420586, -0.37900182601770677] | [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5531525166012126, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.38487942444586554, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5435096396056114, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.30577448810009067, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.39621882350397053, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] | [(washington, GPE, 0, 10), (dallas, GPE, 80, 86), (jamahl mosley, PERSON, 88, 101), (milwaukee, GPE, 103, 112), (darvin ham, PERSON, 114, 124), (charles lee, PERSON, 126, 137), (denver, GPE, 139, 145)] | 4 | . 3 n1412097959219675144 | 1.412097e+18 | 2021-07-05 13:16:03 EDT | 2021-07-05 | 13:16:03 | -400.0 | 50323173.0 | wojespn | Adrian Wojnarowski | Schlenk announced the agreement on a media conference call minutes ago. | en | [] | [] | [] | 20.0 | 91.0 | 1633.0 | [] | [] | https://twitter.com/wojespn/status/1412097959219675144 | False | NaN | 0.0 | NaN | [] | schlenk announced agreement media conference call minutes ago | [-0.05094735889135986, 0.011885021709133971] | [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] | [(schlenk, ORG, 0, 7)] | 0 | . 4 n1412097377725566977 | 1.412097e+18 | 2021-07-05 13:13:45 EDT | 2021-07-05 | 13:13:45 | -400.0 | 50323173.0 | wojespn | Adrian Wojnarowski | Atlanta president/GM Travis Schlenk told reporters that an agreement was in place to shed interim label after McMillan led Hawks to Eastern Conference Finals. | en | [] | [] | [] | 29.0 | 187.0 | 2762.0 | [] | [] | https://twitter.com/wojespn/status/1412097377725566977 | False | NaN | 0.0 | NaN | [] | atlanta president gm travis schlenk told reporters agreement place shed interim label mcmillan led hawks eastern conference finals | [-0.08607428153598168, -0.012672414297085188] | [0.0, 0.0, 0.0, 0.5672489225848258, 0.0, 0.0, 0.6296566841281105, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.5308117556715819, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] | [(atlanta, GPE, 0, 7), (gm, ORG, 18, 20), (travis schlenk, PERSON, 21, 35), (mcmillan, PERSON, 92, 100)] | 0 | . hero.scatterplot(df, &#39;pca&#39;, color = &#39;kmeans&#39;, hover_data=[&#39;clean_tweet&#39;] ) . Analyze engagement over time . plt.figure(figsize=(17,10)) sns.lineplot(data=df[&#39;retweets_count&#39;], dashes=False) plt.title(&quot;Retweets over time&quot;) plt.show() . plt.figure(figsize=(17,10)) sns.lineplot(data=df[&#39;replies_count&#39;], dashes=False) plt.title(&quot;Replies over time&quot;) plt.show() . plt.figure(figsize=(17,10)) sns.lineplot(data=df[&#39;likes_count&#39;], dashes=False) plt.title(&quot;Likes over time&quot;) plt.show() . View Common Phrases . import re # Gensim import gensim from gensim.utils import simple_preprocess # NLTK import nltk from nltk.corpus import stopwords from collections import Counter from wordcloud import WordCloud import warnings warnings.filterwarnings(&quot;ignore&quot;, category=DeprecationWarning) . def tokenize(tweet): for word in tweet: yield(gensim.utils.simple_preprocess(str(word), deacc=True)) df[&#39;clean_tweet_tokens&#39;] = list(tokenize(df[&#39;clean_tweet&#39;])) . stop_words = stopwords.words(&#39;english&#39;) stop_words.extend([&quot;co&quot;,&quot;https&quot;,&quot;http&quot;, &quot;tell&quot;, &quot;tells&quot;, &quot;game&quot;, &quot;season&quot;, &quot;sports&quot;, &quot;two&quot;]) # REMOVE STOPWORDS def remove_stopwords(tweets): return [[word for word in simple_preprocess(str(tweet)) if word not in stop_words] for tweet in tweets] df[&#39;tokens_no_stop&#39;] = remove_stopwords(df[&#39;clean_tweet_tokens&#39;]) . df[&#39;length&#39;] = df[&#39;tokens_no_stop&#39;].apply(len) df = df.drop(df[df[&#39;length&#39;]&lt;3].index) df = df.drop([&#39;length&#39;], axis=1) df.shape df.reset_index(drop=True, inplace=True) . df.to_pickle(&#39;pre-processed.pkl&#39;) . def sent_to_words(sentences): for sentence in sentences: yield(gensim.utils.simple_preprocess(str(sentence), deacc=True)) # deacc=True removes punctuations data_words = list(sent_to_words(df[&#39;clean_tweet&#39;])) . bigram = gensim.models.Phrases(data_words, min_count=10, threshold=100) trigram = gensim.models.Phrases(bigram[data_words], threshold=100) # Faster way to get a sentence clubbed as a bigram bigram_mod = gensim.models.phrases.Phraser(bigram) trigram_mod = gensim.models.phrases.Phraser(trigram) def make_bigrams(texts): return [bigram_mod[doc] for doc in texts] def make_trigrams(texts): return [trigram_mod[bigram_mod[doc]] for doc in texts] # Form Bigrams data_words_bigrams = make_bigrams(data_words) . terms_bigram = [list(bigrams(tweet)) for tweet in df[&#39;tokens_no_stop&#39;]] # View bigrams for the first tweet terms_bigram[0] . [(&#39;reporting&#39;, &#39;malika&#39;), (&#39;malika&#39;, &#39;andrews&#39;), (&#39;andrews&#39;, &#39;milwaukee&#39;), (&#39;milwaukee&#39;, &#39;giannis&#39;), (&#39;giannis&#39;, &#39;antetokounmpo&#39;), (&#39;antetokounmpo&#39;, &#39;continued&#39;), (&#39;continued&#39;, &#39;around&#39;), (&#39;around&#39;, &#39;clock&#39;), (&#39;clock&#39;, &#39;treatment&#39;), (&#39;treatment&#39;, &#39;left&#39;), (&#39;left&#39;, &#39;knee&#39;), (&#39;knee&#39;, &#39;hopes&#39;), (&#39;hopes&#39;, &#39;becoming&#39;), (&#39;becoming&#39;, &#39;cleared&#39;), (&#39;cleared&#39;, &#39;play&#39;), (&#39;play&#39;, &#39;finals&#39;), (&#39;finals&#39;, &#39;vs&#39;), (&#39;vs&#39;, &#39;phoenix&#39;), (&#39;phoenix&#39;, &#39;tonight&#39;), (&#39;tonight&#39;, &#39;expected&#39;), (&#39;expected&#39;, &#39;time&#39;), (&#39;time&#39;, &#39;decision&#39;), (&#39;decision&#39;, &#39;availability&#39;)] . bigrams = list(itertools.chain(*terms_bigram)) # Create counter of words in clean bigrams bigram_counts = collections.Counter(bigrams) . bigram_df = pd.DataFrame(bigram_counts.most_common(25), columns=[&#39;bigram&#39;, &#39;count&#39;]) . d = bigram_df.set_index(&#39;bigram&#39;).T.to_dict(&#39;records&#39;) # Create network plot G = nx.Graph() # Create connections between nodes for k, v in d[0].items(): G.add_edge(k[0], k[1], weight=(v * 5)) fig, ax = plt.subplots(figsize=(11, 9)) pos = nx.spring_layout(G, k=2) # Plot networks nx.draw_networkx(G, pos, font_size=10, width=3, edge_color=&#39;grey&#39;, node_color=&#39;purple&#39;, with_labels = False, ax=ax) # Create offset labels for key, value in pos.items(): x, y = value[0]+.135, value[1]+.065 ax.text(x, y, s=key, bbox=dict(facecolor=&#39;red&#39;, alpha=0.15), horizontalalignment=&#39;center&#39;, fontsize=14) plt.show() . Conclusion . Woj generally plays things pretty close to the vest. The words and phrases he uses tend to be pretty programmatic, and he rarely strays from his typical tweet structures. . Journalists like Woj need to be very reliable and structured with how the break news. The popularity of Woj&#39;s Twitter account over time are a testament to this predictable, disciplined approach. .",
            "url": "https://www.jjhoffstein.com/twint/data_visualization/2021/07/05/Woj-Twitter-Analysis.html",
            "relUrl": "/twint/data_visualization/2021/07/05/Woj-Twitter-Analysis.html",
            "date": " • Jul 5, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "My First ML Application",
            "content": ". My First ML Application . I created my first application! It asks users to upload a picture of Michael Jordan, LeBron James, or Kobe Bryant, and tells you who you uploaded. Here is the link: https://mybinder.org/v2/gh/diversifyguy/goat_app/HEAD?urlpath=%2Fvoila%2Frender%2Fbball_player_classifier.ipynb . Unfortunately, it doesn&#39;t really work, and I&#39;m not sure why! My suspicion is that it&#39;s due to overfitting, which is something I&#39;ll learn about more later. . For now, I&#39;ll call this good enough and move on. Onward! .",
            "url": "https://www.jjhoffstein.com/2021/06/23/My-First-ML-Application.html",
            "relUrl": "/2021/06/23/My-First-ML-Application.html",
            "date": " • Jun 23, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Beginning",
            "content": ". Beginning . This is my first blog post. I&#39;ve become interested in data science, machine learning, and artificial intelligence, and now here I am blogging about it. My hope is that blogging will help clarify my thoughts, sharpen my ideas, and elicit feedback from others. Thank you for your participation in this process! . As a blogger, my goal is to heed Professor James Miller&#39;s three pieces of writing advice: be clear, be concise, and be interesting -- in that order of importance. . Mine: Be clear, be concise, be interesting -- in that order of importance. . &mdash; James Miller (@JimDMiller) March 29, 2021 . Please wish me luck on this journey, and feel free to DM me anytime on Twitter @jjhoffstein. Thank you!! . What Classes Am I Taking? . My plan is two take two classes: Stanford&#39;s CSS 229, taught by Andrew Ng; and fast.ai&#39;s Practical Deep Learning for Coders, taught by Jeremy Howard. The former is more of a theory course, the latter is more of a practical course. . If you&#39;re interested in learning more about Andrew Ng and his mission, I recommend this video: . . If you&#39;re interested in Jeremy Howard and his mission, I recommend this video: . . Without Further Ado . Let&#39;s get started! .",
            "url": "https://www.jjhoffstein.com/2021/06/22/Beginning.html",
            "relUrl": "/2021/06/22/Beginning.html",
            "date": " • Jun 22, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": ". Bio . 2020+: Joined Vassar Women’s Basketball as full-time assistant coach. 2018 - 2020: Earned Master’s Degree in Exercise and Sports Studies from Smith College. Was a graduate-assistant coach for Smith Women’s Basketball; made it to the NCAA Tournament 2nd Round my first year and to the Sweet 16 my second year before tournament was cut short due to COVID-19. 2014 - 2018: Worked as a finance associate at Goldman Sachs in New York City. Focused on liquidity risk management and asset-liability management in Corporate Treasury Department. 2010 - 2014: Earned Bachelor of Arts in Economics from Amherst College. Was a student-assistant coach for Amherst Women’s Basketball; made it to the NCAA Tournament Sweet 16. Studied financial crises at London School of Economics’ summer program. . Misc . I love using YouTube as a learning tool and believe it is the biggest human revolution since the Gutenberg printing press. I similarly love using Twitter as a learning tool. I try and avoid politics &amp; pop culture and just focus on content that will level-up my knowledge and skills. I’ve collated my basketball coaching portfolio and published it at jjhoffstein.github.io I have a photic sneeze reflex, which means that I sneeze basically every time I walk outside and look at the sun. .",
          "url": "https://www.jjhoffstein.com/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://www.jjhoffstein.com/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}